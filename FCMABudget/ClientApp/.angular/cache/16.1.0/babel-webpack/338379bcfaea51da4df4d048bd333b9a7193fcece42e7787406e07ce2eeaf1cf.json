{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\nfunction AccountsListComponent_p_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\")(1, \"em\");\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction AccountsListComponent_table_5_tr_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const forecast_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(forecast_r3.date);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(forecast_r3.temperatureC);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(forecast_r3.temperatureF);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(forecast_r3.summary);\n  }\n}\nfunction AccountsListComponent_table_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"table\", 3)(1, \"thead\")(2, \"tr\")(3, \"th\");\n    i0.ɵɵtext(4, \"Date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"th\");\n    i0.ɵɵtext(6, \"Temp. (C)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\");\n    i0.ɵɵtext(8, \"Temp. (F)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\");\n    i0.ɵɵtext(10, \"Summary\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(11, \"tbody\");\n    i0.ɵɵtemplate(12, AccountsListComponent_table_5_tr_12_Template, 9, 4, \"tr\", 4);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(12);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.forecasts);\n  }\n}\nexport class AccountsListComponent {\n  constructor(http, baseUrl) {\n    this.forecasts = [];\n    http.get(baseUrl + 'weatherforecast').subscribe(result => {\n      this.forecasts = result;\n    }, error => {\n      console.error(error);\n    });\n  }\n}\nAccountsListComponent.ɵfac = function AccountsListComponent_Factory(t) {\n  return new (t || AccountsListComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject('BASE_URL'));\n};\nAccountsListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AccountsListComponent,\n  selectors: [[\"app-accounts-list\"]],\n  decls: 6,\n  vars: 2,\n  consts: [[\"id\", \"tableLabel\"], [4, \"ngIf\"], [\"class\", \"table table-striped\", \"aria-labelledby\", \"tableLabel\", 4, \"ngIf\"], [\"aria-labelledby\", \"tableLabel\", 1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"]],\n  template: function AccountsListComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"Accounts\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p\");\n      i0.ɵɵtext(3, \"Accounts listing.\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, AccountsListComponent_p_4_Template, 3, 0, \"p\", 1);\n      i0.ɵɵtemplate(5, AccountsListComponent_table_5_Template, 13, 1, \"table\", 2);\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", !ctx.forecasts);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.forecasts);\n    }\n  },\n  dependencies: [i2.NgForOf, i2.NgIf],\n  encapsulation: 2\n});","map":{"version":3,"names":["i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","forecast_r3","date","temperatureC","temperatureF","summary","ɵɵtemplate","AccountsListComponent_table_5_tr_12_Template","ɵɵproperty","ctx_r1","forecasts","AccountsListComponent","constructor","http","baseUrl","get","subscribe","result","error","console","ɵɵdirectiveInject","i1","HttpClient","selectors","decls","vars","consts","template","AccountsListComponent_Template","rf","ctx","AccountsListComponent_p_4_Template","AccountsListComponent_table_5_Template"],"sources":["D:\\Projects\\FCMA_Demo\\FCMABudget\\FCMABudget\\ClientApp\\src\\app\\accounts-list\\accounts-list.component.ts","D:\\Projects\\FCMA_Demo\\FCMABudget\\FCMABudget\\ClientApp\\src\\app\\accounts-list\\accounts-list.component.html"],"sourcesContent":["import { Component, Inject } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\n@Component({\r\n  selector: 'app-accounts-list',\r\n  templateUrl: './accounts-list.component.html'\r\n})\r\nexport class AccountsListComponent {\r\n  public forecasts: Account[] = [];\r\n\r\n  constructor(http: HttpClient, @Inject('BASE_URL') baseUrl: string) {\r\n    http.get<Account[]>(baseUrl + 'weatherforecast').subscribe(\r\n      result => { this.forecasts = result; },\r\n      error => { console.error(error); });\r\n  }\r\n}\r\n\r\ninterface Account {\r\n  date: string;\r\n  temperatureC: number;\r\n  temperatureF: number;\r\n  summary: string;\r\n}\r\n","<h1 id=\"tableLabel\">Accounts</h1>\r\n\r\n<p>Accounts listing.</p>\r\n\r\n<p *ngIf=\"!forecasts\"><em>Loading...</em></p>\r\n\r\n<table class='table table-striped' aria-labelledby=\"tableLabel\" *ngIf=\"forecasts\">\r\n  <thead>\r\n    <tr>\r\n      <th>Date</th>\r\n      <th>Temp. (C)</th>\r\n      <th>Temp. (F)</th>\r\n      <th>Summary</th>\r\n    </tr>\r\n  </thead>\r\n  <tbody>\r\n    <tr *ngFor=\"let forecast of forecasts\">\r\n      <td>{{ forecast.date }}</td>\r\n      <td>{{ forecast.temperatureC }}</td>\r\n      <td>{{ forecast.temperatureF }}</td>\r\n      <td>{{ forecast.summary }}</td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}